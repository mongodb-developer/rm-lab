services:
  lab-runner:
    build:
      context: ./container  # Relative path to the container folder
      dockerfile: Dockerfile
    depends_on:
      mongodb:
        condition: service_healthy
        restart: true
    volumes:
      - ../..:/workspaces:cached
    user: "1000:100" #Set user and group ID.

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    network_mode: service:mongodb

  migrator:
    image: public.ecr.aws/v4d7k6c9/relational-migrator:1.13.2
    ports:
      - "8080:8080"
    depends_on:
      mongodb:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - MIGRATOR_PATH_DATA:/root/Migrator
      - MIGRATOR_PATH_DRIVER:/opt/mongodb-relational-migrator/lib/app/lib/driver.jar

  postgres:
    image: postgres
    container_name: postgres-library-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: postgres    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 2s

  mongodb:
    image: mongodb/mongodb-atlas-local:latest
    command: mongod --port 27017
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGODB_INITDB_ROOT_USERNAME=admin
      - MONGODB_INITDB_ROOT_PASSWORD=mongodb
    healthcheck:
      test: mongosh --eval 'db.hello()'
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 2s

volumes:
  mongodb_data:
  MIGRATOR_PATH_DATA:
  MIGRATOR_PATH_DRIVER: